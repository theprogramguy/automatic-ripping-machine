# ARM (Automatic Ripping Machine) oonfig file

#################
## ARM Options ##
#################

# Distinguish UDF video discs from UDF data discs.  Requires mounting disc so adds a few seconds to the identify script.
ARM_CHECK_UDF=true

# When enabled if the disc is a DVD use dvdid to calculate a crc64 and query Windows Media Meta Services for the Movie Title.
# For BluRays attempts to extract the title from an XML file on the disc
GET_VIDEO_TITLE=true

# Skip transcoding if you want the original MakeMKV files as your final output
# Thiw will produce the highest quality videos (and use the most storage)
# Note: RIPMETHOD must be set to "mkv" for this feature to work
SKIP_TRANSCODE=false

#####################
## Directory setup ##
#####################

# Base directory of ARM media directory
# Ripped and transcoded files end up here
ARMPATH="/mnt/media/ARM/Media/Unidentified/"

# Path to raw MakeMKV directory
# Destination for MakeMKV and source for HandBrake
RAWPATH="/mnt/media/ARM/raw/"

# Path to final media directory
# Destination for final file.  Only used for movies that are positively identified
MEDIA_DIR="/mnt/media/ARM/Media/Movies/"

# Path to directory to hold log files
# Make sure to include trailing /
LOGPATH="/opt/arm/logs/"

# How long to let log files live before deleting (in days)
LOGLIFE=1

########################
##  File Permissions  ##
########################

# Enabling this seting will allow you to adjust the default file permissions of the outputted files
# The default value is set to 777 for read/write/execute for all users, but can be changed below using the "CHMOD_VALUE" setting
# This setting is helpfuly when storing the data locally on the system
SET_MEDIA_PERMISSIONS=false
CHMOD_VALUE=777

########################
## MakeMKV Parameters ##
########################

# Minimum length of track for MakeMKV rip (in seconds)
MINLENGTH="600"

# Method of MakeMKV to use for Blu Ray discs.  Options are "mkv" or "backup".
# mkv is the normal method of ripping mkv files directly from the DVD
# backup decrypts the dvd and then copies it to the hard drive.  This allows HandBrake to apply some of it's
# analytical abilities such as the main-feature identification.  This method seems to offer success on bluray 
# discs that fail in "mkv" mode. *** NOTE: MakeMKV only supports the backup method on BluRay discs.  Regular
# DVD's will always default back to the "mkv" mode. If this is set to "backup" then you must also set HandBrake's MAINFEATURE to true. 
RIPMETHOD="mkv" 

# MakeMKV Arguments
# MakeMKV Profile used for controlling Audio Track Selection.
# This is the default profile MakeMKV uses for Audio track selection. Updating this file or changing it is considered
# to be advanced usage of MakeMKV. But this will allow users to alternatively tell makemkv to select HD audio tracks and etc.
# MKV_ARGS="--profile=/opt/arm/default.mmcp.xml"
MKV_ARGS=""

##########################
## HandBrake Parameters ##
##########################

# Handbrake preset profile
# Execute "HandBrakeCLI -z" to see a list of all presets
HB_PRESET="High Profile" 

# Extension of the final video file
DEST_EXT=mkv

# Handbrake binary to call
HANDBRAKE_CLI=HandBrakeCLI

# Have HandBrake transcode the main feature only.  BluRay discs must have RIPMETHOD="backup" for this to work.
# If MAINFEATURE is true, blurays will be backed up to the HD and then HandBrake will go to work on the backed up
# files.  For normal DVDs, ARM will bypass MakeMKV and hand off the dvd directly to HandBrake.  This will require 
# libdvdcss2 be installed.
# NOTE: For the most part, HandBrake correctly identifies the main feature on movie DVD's, although it is not perfect. 
# However, it does not handle tv shows well at all.  You will likely want this value to be false when ripping tv shows.
MAINFEATURE=false

# Additional HandBrake arguments.  
HB_ARGS="--subtitle scan -F"

#####################
## Enable Plex Use ##
#####################

# Set this setting to true, to enable Plex Extras support
PLEX_SUPPORT=false


#####################
## Enable KODI Use ##
#####################


KODI_SUPPORT=true
KODI_NOTIFY=true
#Comma seperated values, supports ipv4,v6,avahi(zeroconf), IP
KODI_CLIENTS="localhost,player1.local"



#####################
## Emby Parameters ##
#####################

# Parameters to enable automatic library scan in Emby.  This will trigger only if MainFeature is true above.

# Scan emby library after succesful placement of mainfeature (see above)
EMBY_REFRESH=false

# Use subfolders in Emby as described here: https://github.com/MediaBrowser/Wiki/wiki/Movie%20naming#movie-extras
EMBY_SUBFOLDERS=true

# Server parameters
# Server can be ip address or domain name
EMBY_SERVER=""
EMBY_PORT="8096"

# Emby authentication fluff parameters.  These can be anything.
EMBY_CLIENT="ARM"
EMBY_DEVICE="ARM"
EMBY_DEVICEID="ARM"

# Emby authentication parameters.  These are parameters that must be set to a current user in Emby.
EMBY_USERNAME=""

# EMBY_USERID is the user ID associated with the username above.  You can find this by going to the following address on your emby server
# <server>:<port>/Users/Public and getting the ID value for the username above.
EMBY_USERID=""

# This is the SHA1 encrypted password for the username above.  You can generate the SHA1 hash of your password by executing the following at
# the command line: 
# echo -n your-password | sha1sum | awk '{print $1}'
# or using an online generator like the one located at http://www.sha1-online.com/
EMBY_PASSWORD=""

#############################
## Notification Parameters ##
#############################

# Pushbullet API Key
# Leave empty or comment out to disable Pushbullet notifications
PB_KEY=""

# IFTTT API KEY
# Leave empty or comment out to disable IFTTT notifications
# IFTTT_KEY=""

# IFTTT Event Name
IFTTT_EVENT="arm_event"

# Determine logfile name
# use the label of the DVD/CD or else use empty.log
# this is required for udev events where there is no media available
# such as ejecting the drive
if [ -z "$ID_FS_LABEL" ]; then
        LOGFILE="empty.log"
else
        LOGFILE=${ID_FS_LABEL}".log"
fi

# Set full logfile path
LOG=$LOGPATH$LOGFILE

